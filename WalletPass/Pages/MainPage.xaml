<Page
    x:Class="WalletPass.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:primitives="clr-namespace:Microsoft.Phone.Controls.Primitives;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:c4fControls="clr-namespace:Coding4Fun.Toolkit.Controls.Converters;assembly=Coding4Fun.Toolkit.Controls" 
    xmlns:Coding4FunControls="clr-namespace:Coding4Fun.Toolkit.Controls;assembly=Coding4Fun.Toolkit.Controls" 
    xmlns:System="clr-namespace:System;assembly=mscorlib" 
    xmlns:local="clr-namespace:WalletPass"
    mc:Ignorable="d"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    >



    <Page.Resources>
        <!--local:ClasePassCollection x:Key="ClasePassCollection"/-->
        <!--local:StringToColorConverter x:Key="StringToColor"/-->

        <!--Background="#FFF5FAFF"-->

        <!-- Estilos y plantillas para las listas de passbook-->
        <DataTemplate x:Key="PassItemTemplate">
            <Grid Background="Transparent" Tapped="OnItemContentTap" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1"/>
                </Grid.ColumnDefinitions>

                <Rectangle Grid.Column="0" Width="1" Fill="Transparent" />
            </Grid>
        </DataTemplate>
        <DataTemplate x:Key="PassItemTemplateInfo">
            <Grid HorizontalAlignment="Right" Opacity="{Binding relevantDateOpacity}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="430"/>
                </Grid.ColumnDefinitions>

                <Border Height="{Binding listItemHeight}" Grid.Column="0" Width="24" 
                        Background="Transparent" HorizontalAlignment="left" 
                        VerticalAlignment="top" CornerRadius="5"/>

                <Border x:Name="mask" Grid.Column="1" Padding="2" 
                        Background="{Binding backgroundColorBrush}" 
                        BorderBrush="{Binding labelColorBrush}" BorderThickness="0"
                        CornerRadius="10">
                    <Grid Background="{Binding backgroundColorBrush}" Tapped="OnItemContentTap">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="115"/>
                        </Grid.RowDefinitions>


                        <Border Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" 
                                Height="{Binding Source={StaticResource AppSettings},Path=listItemHeight}"
                                Padding="2" CornerRadius="10">
                            <Border.Background>
                                <ImageBrush ImageSource="{Binding backgroundImage}" 
                                            Stretch="UniformToFill" AlignmentX="Center" AlignmentY="Top"/>
                            </Border.Background>
                        </Border>


                        <Grid Visibility="{Binding Source={StaticResource AppSettings},Path=dateVisibility,Converter={StaticResource BoolToVisConverter}}" Height="20" Margin="12,7,0,7" Grid.Row="0" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Foreground="{Binding labelColorBrush}" 
                                       FontSize="24" HorizontalAlignment="Left" 
                                       VerticalAlignment="Center" FontFamily="Segoe WP Light" 
                                       Text="{Binding Source={StaticResource LocalizedStrings},Path=LocalizedResources.listItemDate}" />
                            <TextBlock Grid.Column="1" Foreground="{Binding foregroundColorBrush}" 
                                       FontSize="24" HorizontalAlignment="Left" 
                                       VerticalAlignment="Center" 
                                       FontFamily="Segoe WP Light" Text="{Binding relevantDay}" />
                        </Grid>
                        <Canvas Background="{Binding labelColorBrush}" Grid.Row="1" Height="1"
                                Visibility="{Binding Source={StaticResource AppSettings },Path=dateVisibility,Converter={StaticResource BoolToVisConverter}}"/>
                        <Grid Margin="12,0,12,0" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width ="Auto"/>
                                <ColumnDefinition Width ="Auto"/>
                                <ColumnDefinition Width ="Auto"/>
                                <ColumnDefinition Width ="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="10"/>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="10"/>
                            </Grid.RowDefinitions>

                            <Rectangle Grid.Row="0" Grid.ColumnSpan="4" 
                                       Height="10" Fill="{Binding backgroundColorBrush}"
                                       HorizontalAlignment="Stretch"/>
                            
                            <Image Grid.Column="0" Grid.Row="1" 
                                   Grid.RowSpan="2" Height="80" Width="{Binding logoWidth}"
                                   HorizontalAlignment="Left" VerticalAlignment="Center"
                                   Source="{Binding logoImage}"/>
                            <TextBlock Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" 
                                       VerticalAlignment="Center" Margin="5,0,0,0" HorizontalAlignment="left" FontSize="34" FontFamily="Segoe WP Light" Foreground="{Binding foregroundColorBrush}" Text="{Binding logoText}"/>
                            <Viewbox StretchDirection="DownOnly" 
                                     Grid.Column="2" Grid.Row="1" HorizontalAlignment="Right"
                                     VerticalAlignment="Bottom"  Margin="0,0,10,0">
                                <TextBlock  Foreground="{Binding labelColorBrush}" 
                                            FontWeight="Medium"  Text="{Binding textLabel2}"
                                            FontFamily="Segoe WP Light"/>
                            </Viewbox>
                            <Viewbox StretchDirection="DownOnly" Grid.Column="3" Grid.Row="1"
                                     Margin="10,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                <TextBlock  Foreground="{Binding labelColorBrush}" 
                                            FontWeight="Medium"  Text="{Binding textLabel1}" 
                                            FontFamily="Segoe WP Light" />
                            </Viewbox>
                            <Viewbox StretchDirection="DownOnly"  Grid.Column="2" Grid.Row="2"
                                     HorizontalAlignment="Right" VerticalAlignment="Center" 
                                     Margin="0,0,10,0">
                                <TextBlock Foreground="{Binding foregroundColorBrush}" 
                                           FontSize="36" FontFamily="Segoe WP Light" 
                                           Text="{Binding textKey2}" />
                            </Viewbox>
                            <Viewbox StretchDirection="DownOnly"  Grid.Column="3" Grid.Row="2"
                                     HorizontalAlignment="Right" VerticalAlignment="Center"  Margin="10,0,0,0">
                                <TextBlock Foreground="{Binding foregroundColorBrush}" FontSize="36" FontFamily="Segoe WP Light" Text="{Binding textKey1}" />
                            </Viewbox>

                            <Rectangle Grid.Row="3" Grid.ColumnSpan="4" Height="10" Fill="{Binding backgroundColorBrush}" HorizontalAlignment="Stretch"/>
                            <Image Grid.Column="3" Grid.Row="1" Height="40" Width="40" 
                                   Stretch="Fill" HorizontalAlignment="Right" 
                                   Source="/Assets/AppBar/appbar.refreshUpdate.png" Visibility="{Binding visibleUpdate ,Converter={StaticResource BoolToVisConverter}}"/>
                        </Grid>
                    </Grid>
                </Border>

                <!--toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False">
                        <toolkit:MenuItem IsEnabled="{Binding isNotPinned}" Header="{Binding Path=LocalizedResources.AppBarButtonPinToStart ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuPinStart_Click"/>
                        <toolkit:MenuItem IsEnabled="{Binding hasRelevantDate}" Header="{Binding Path=LocalizedResources.AppBarButtonSetRelevantDate ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuSetRelevantDate_Click"/>
                        <toolkit:MenuItem Header="{Binding Path=LocalizedResources.AppBarButtonArchiveAdd ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuAddToArchived_Click"/>
                        <toolkit:MenuItem IsEnabled="{Binding canShare}" Header="{Binding Path=LocalizedResources.AppBarButtonShare ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuShare_Click"/>
                        <toolkit:MenuItem Header="{Binding Path=LocalizedResources.AppBarButtonDelete ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuDelete_Click"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu-->
            </Grid>


        </DataTemplate>
        <DataTemplate x:Key="PassItemTemplateInfoSmall">
            <Grid HorizontalAlignment="Right" Opacity="{Binding relevantDateOpacity}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24"/>
                    <ColumnDefinition Width="430"/>
                </Grid.ColumnDefinitions>

                <Border Height="{Binding listItemHeight}" Grid.Column="0" 
                        Width="24" Background="Transparent" HorizontalAlignment="left"
                        VerticalAlignment="top" CornerRadius="5"/>

                <Border x:Name="mask" Grid.Column="1" Padding="2" Background="{Binding backgroundColorBrush}" 
                        BorderBrush="{Binding labelColorBrush}" BorderThickness="0" CornerRadius="10">
                    <Grid Background="{Binding backgroundColorBrush}" Tapped="OnItemContentTap">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="85"/>
                        </Grid.RowDefinitions>


                        <Border Grid.Row="0" Grid.RowSpan="3" Grid.Column="1" Height="{Binding Source={StaticResource AppSettings},Path=listItemHeightSmall}" Padding="2" CornerRadius="10">
                            <Border.Background>
                                <ImageBrush ImageSource="{Binding backgroundImage}" 
                                            Stretch="UniformToFill" AlignmentX="Center" AlignmentY="Top"/>
                            </Border.Background>
                        </Border>


                        <Grid Visibility="{Binding Source={StaticResource AppSettings},Path=dateVisibility,Converter={StaticResource BoolToVisConverter}}" Height="16" Margin="12,4,0,4" Grid.Row="0" >
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Foreground="{Binding labelColorBrush}" 
                                       FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Segoe WP Light" Text="{Binding Source={StaticResource LocalizedStrings},Path=LocalizedResources.listItemDate}" />
                            <TextBlock Grid.Column="1" Foreground="{Binding foregroundColorBrush}" 
                                       FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Segoe WP Light" Text="{Binding relevantDay}" />
                        </Grid>
                        <Canvas Background="{Binding labelColorBrush}" Grid.Row="1" Height="1" Visibility="{Binding Source={StaticResource AppSettings },Path=dateVisibility,Converter={StaticResource BoolToVisConverter}}"/>
                        <Grid Margin="12,0,12,0" Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width ="Auto"/>
                                <ColumnDefinition Width ="Auto"/>
                                <ColumnDefinition Width ="Auto"/>
                                <ColumnDefinition Width ="*"/>
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="5"/>
                                <RowDefinition Height="37"/>
                                <RowDefinition Height="37"/>
                                <RowDefinition Height="6"/>
                            </Grid.RowDefinitions>

                            <Rectangle Grid.Row="0" Grid.ColumnSpan="4" Height="5" 
                                       Fill="{Binding backgroundColorBrush}" HorizontalAlignment="Stretch"/>
                            <Image Grid.Column="0" Grid.Row="1" Grid.RowSpan="2" 
                                   Height="64" Width="{Binding logoWidth}" 
                                   HorizontalAlignment="Left" VerticalAlignment="Center"
                                   Source="{Binding logoImage}"/>
                            <TextBlock Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" 
                                       VerticalAlignment="Center" Margin="5,0,0,0" HorizontalAlignment="left" FontSize="30" FontFamily="Segoe WP Light" Foreground="{Binding foregroundColorBrush}" Text="{Binding logoText}"/>
                            <Viewbox StretchDirection="DownOnly" Grid.Column="2" 
                                     Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Bottom"  Margin="0,0,10,0">
                                <TextBlock  Foreground="{Binding labelColorBrush}"
                                            FontWeight="Medium"  Text="{Binding textLabel2}" 
                                            FontFamily="Segoe WP Light"/>
                            </Viewbox>
                            <Viewbox StretchDirection="DownOnly" Grid.Column="3" Grid.Row="1" 
                                     Margin="10,0,0,0" HorizontalAlignment="Right" VerticalAlignment="Bottom">
                                <TextBlock  Foreground="{Binding labelColorBrush}"
                                            FontWeight="Medium"  Text="{Binding textLabel1}" 
                                            FontFamily="Segoe WP Light" />
                            </Viewbox>
                            <Viewbox StretchDirection="DownOnly"  Grid.Column="2" Grid.Row="2"
                                     HorizontalAlignment="Right" VerticalAlignment="Center"  Margin="0,0,10,0">
                                <TextBlock Foreground="{Binding foregroundColorBrush}" 
                                           FontSize="36" FontFamily="Segoe WP Light" 
                                           Text="{Binding textKey2}" />
                            </Viewbox>
                            <Viewbox StretchDirection="DownOnly"  Grid.Column="3" Grid.Row="2"
                                     HorizontalAlignment="Right" VerticalAlignment="Center"  Margin="10,0,0,0">
                                <TextBlock Foreground="{Binding foregroundColorBrush}" 
                                           FontSize="36" FontFamily="Segoe WP Light" 
                                           Text="{Binding textKey1}" />
                            </Viewbox>

                            <Rectangle Grid.Row="3" Grid.ColumnSpan="4" Height="6" 
                                       Fill="{Binding backgroundColorBrush}" HorizontalAlignment="Stretch"/>
                            <Image Grid.Column="3" Grid.Row="1" Height="32"
                                   Width="32" Stretch="Fill" HorizontalAlignment="Right" Source="/Assets/AppBar/appbar.refreshUpdate.png" Visibility="{Binding visibleUpdate ,Converter={StaticResource BoolToVisConverter}}"/>
                        </Grid>
                    </Grid>
                </Border>

                <!--toolkit:ContextMenuService.ContextMenu>
                    <toolkit:ContextMenu IsZoomEnabled="False">
                        <toolkit:MenuItem IsEnabled="{Binding isNotPinned}" Header="{Binding Path=LocalizedResources.AppBarButtonPinToStart ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuPinStart_Click"/>
                        <toolkit:MenuItem IsEnabled="{Binding hasRelevantDate}" Header="{Binding Path=LocalizedResources.AppBarButtonSetRelevantDate ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuSetRelevantDate_Click"/>
                        <toolkit:MenuItem Header="{Binding Path=LocalizedResources.AppBarButtonArchiveAdd ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuAddToArchived_Click"/>
                        <toolkit:MenuItem IsEnabled="{Binding canShare}" Header="{Binding Path=LocalizedResources.AppBarButtonShare ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuShare_Click"/>
                        <toolkit:MenuItem Header="{Binding Path=LocalizedResources.AppBarButtonDelete ,Source={StaticResource LocalizedStrings }}" Click="itemContextMenuDelete_Click"/>
                    </toolkit:ContextMenu>
                </toolkit:ContextMenuService.ContextMenu-->
            </Grid>


        </DataTemplate>
        <DataTemplate x:Key="groupHeaderTemplate">
            <Border Width="450" Height="72" HorizontalAlignment="Stretch" Margin="6">
                <StackPanel Orientation="Horizontal">
                    <Border Height="70" Width="70" CornerRadius="80" Margin="6,0" 
                            Background="{Binding color}">
                        <!--<Border.Background>
                            <ImageBrush ImageSource="{Binding Icon}" Stretch="Fill"/>
                        </Border.Background>-->
                        
                    </Border>
                    <TextBlock Text="{Binding Title}"
                           FontSize="26" Padding="6"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left" 
                           Margin="0,3,0,0"
                           Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" 
                               FontFamily="Segoe WP Light"/>
                </StackPanel>

            </Border>
        </DataTemplate>
        <!--Style x:Key="groupHeaderJumListStyle" TargetType="LongListSelector" >
            <Setter Property="GridCellSize" Value="470,80"/>
            <Setter Property="LayoutMode" Value="List"/>
            <Setter Property="ItemTemplate">
                <Setter.Value>
                    <DataTemplate>
                        <Border Background="{Binding Source={StaticResource AppSettings}, Path=themeColorMain,Converter={StaticResource StringToColor} }"
                                Width="460" Height="80" Margin="4" 
                                HorizontalAlignment="Stretch">
                            <StackPanel Orientation="Horizontal" >
                                <Border Height="70" Width="70" CornerRadius="80" Margin="6,0"
                                        Background="{Binding color}">                                  
                                    
                                </Border>
                                <TextBlock Text="{Binding Title}"
                                           Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }"
                                           FontSize="28" Padding="6"
                                       VerticalAlignment="Center" 
                                           HorizontalAlignment="Left" FontFamily="Segoe WP Light"/>
                            </StackPanel>

                        </Border>
                    </DataTemplate>
                </Setter.Value>
            </Setter>
        </Style-->
        
        
        <DataTemplate x:Key="groupHeaderTemplateSmall">
            <Border Width="450" Height="56" HorizontalAlignment="Stretch" Margin="6">
                <StackPanel Orientation="Horizontal">
                    <Border Height="54" Width="54" CornerRadius="80" Margin="6,0" 
                            Background="{Binding color}">
                        <!--<Border.Background>
                            <ImageBrush ImageSource="{Binding Icon}" Stretch="Fill"/>
                        </Border.Background>-->
                        
                    </Border>
                    <TextBlock Text="{Binding Title}"
                           FontSize="22" Padding="6"
                           VerticalAlignment="Center"
                           HorizontalAlignment="Left" 
                           Margin="0,3,0,0"
                           Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" FontFamily="Segoe WP Light"/>
                </StackPanel>

            </Border>
        </DataTemplate>
        <Style x:Key="PhoneButtonBase" TargetType="ButtonBase">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
            <Setter Property="Padding" Value="10,5,10,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ButtonBase">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" 
                                                                           Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" 
                                                                           Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    Background="{TemplateBinding Background}" 
                                    CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}">
                                <ContentControl x:Name="ContentContainer" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}" 
                                                Foreground="{TemplateBinding Foreground}"
                                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                                Padding="{TemplateBinding Padding}"
                                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="PhoneRadioButtonCheckBoxBase"
               BasedOn="{StaticResource PhoneButtonBase}" 
               TargetType="ToggleButton">
        </Style>
        <Style x:Key="CheckBoxStyleGrey" 
               BasedOn="{StaticResource PhoneRadioButtonCheckBoxBase}" 
               TargetType="CheckBox">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="CheckBox">
                        <Grid Background="Transparent" HorizontalAlignment="Left">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames
                                                Storyboard.TargetProperty="Background" 
                                                Storyboard.TargetName="CheckBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneRadioCheckBoxPressedBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames 
                                                Storyboard.TargetProperty="Fill" 
                                                Storyboard.TargetName="IndeterminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0"
                                                                        Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush"
                                                                           Storyboard.TargetName="CheckBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Fill"
                                                                           Storyboard.TargetName="IndeterminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" 
                                                                           Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                                <VisualStateGroup x:Name="CheckStates">
                                    <VisualState x:Name="Checked">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility" 
                                                                           Storyboard.TargetName="CheckMark">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Unchecked"/>
                                    <VisualState x:Name="Indeterminate">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Visibility"
                                                                           Storyboard.TargetName="IndeterminateMark">
                                                <DiscreteObjectKeyFrame KeyTime="0">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid>
                                <Grid VerticalAlignment="Center" Margin="10,0,0,0">
                                    <Border x:Name="CheckBackground" 
                                            BorderBrush="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" BorderThickness="2" Background="Transparent"  HorizontalAlignment="Left" IsHitTestVisible="False" VerticalAlignment="Top" Width="13" Height="13" CornerRadius="5"/>
                                    <Rectangle x:Name="IndeterminateMark" Fill="Transparent" HorizontalAlignment="Center" IsHitTestVisible="False" Visibility="Collapsed" VerticalAlignment="Top" Width="16"/>
                                    <Border x:Name="CheckMark"  Background="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" Width="13" Height="13" Visibility="Collapsed" HorizontalAlignment="Left"   IsHitTestVisible="False" VerticalAlignment="Top" CornerRadius="5"  />
                                    <!--<Path x:Name="CheckMark" Data="M0,123 L39,93 L124,164 L256,18 L295,49 L124,240 z" FlowDirection="LeftToRight" HorizontalAlignment="Center" Height="21" IsHitTestVisible="False" Stretch="Fill" StrokeThickness="3" StrokeLineJoin="Round" Visibility="Collapsed" VerticalAlignment="Center" Width="23" Fill="#FFFF0000"/>-->
                                </Grid>
                                <ContentControl x:Name="ContentContainer" 
                                                ContentTemplate="{TemplateBinding ContentTemplate}" 
                                                Content="{TemplateBinding Content}" Grid.Column="1"
                                                Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="0,0,0,0" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- TargetType="toolkit:LongListMultiSelectorItem"-->
            <Style x:Key="LongListMultiSelectorItemStyle1">
            <!--Setter Property="Background" Value="{StaticResource PhoneAccentBrush}"/-->
            <!--Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="toolkit:LongListMultiSelectorItem">
                        <Grid MinHeight="52" Margin="0,5,0,0">
                            <Grid.Resources>
                                <ExponentialEase EasingMode="EaseIn" Exponent="8" x:Key="ExponentialEaseIn"/>
                                <QuadraticEase EasingMode="EaseOut" x:Key="QuadraticEaseOut"/>
                            </Grid.Resources>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="SelectionEnabledStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition x:Name="ClosedToExposed" 
                                                  From="Closed" To="Exposed"
                                                  GeneratedDuration="0:0:0.30">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                       Storyboard.TargetName="OuterHintPanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0.0" 
                                                                          EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="1.0"
                                                                          EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ExposedToClosed" 
                                                  From="Exposed" To="Closed"
                                                  GeneratedDuration="0:0:0.30">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                       Storyboard.TargetName="OuterHintPanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" 
                                                                          EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0"
                                                                          EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ExposedToOpened"
                                                  From="Exposed" To="Opened"
                                                  GeneratedDuration="0:0:0.30">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                       Storyboard.TargetName="SelectBox">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" 
                                                                          EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" 
                                                                          EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                       Storyboard.TargetName="Presenter">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                                       Storyboard.TargetName="OuterHintPanel">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="1.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.30" Value="0.0" EasingFunction="{StaticResource QuadraticEaseOut}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                       Storyboard.TargetName="OuterHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                       Storyboard.TargetName="InnerHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="ClosedToOpened"
                                                  From="Closed" To="Opened"
                                                  GeneratedDuration="0:0:0.15">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                       Storyboard.TargetName="SelectBox">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                       Storyboard.TargetName="Presenter">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                       Storyboard.TargetName="OuterHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                       Storyboard.TargetName="InnerHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition x:Name="OpenedToClosed"
                                                  From="Opened" To="Closed"
                                                  GeneratedDuration="0:0:0.15">
                                            <Storyboard>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                       Storyboard.TargetName="SelectBox">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                                       Storyboard.TargetName="Presenter">
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.0" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                    <EasingDoubleKeyFrame KeyTime="0:0:0.15" Value="0" EasingFunction="{StaticResource ExponentialEaseIn}"/>
                                                </DoubleAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0.15" Value="Collapsed"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualStateGroup.States>
                                        <VisualState x:Name="Closed"/>
                                        <VisualState x:Name="Exposed">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                         Storyboard.TargetName="OuterHintPanel"
                                                         Duration="0" To="1.0"/>
                                            </Storyboard>
                                        </VisualState>
                                        <VisualState x:Name="Opened">
                                            <Storyboard>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                         Storyboard.TargetName="SelectBox"
                                                         Duration="0" To="0"/>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" 
                                                         Storyboard.TargetName="Presenter"
                                                         Duration="0" To="0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="SelectBox">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" 
                                                                       Storyboard.TargetName="OuterCover">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimation Storyboard.TargetProperty="(UIElement.Opacity)" 
                                                         Storyboard.TargetName="OuterHintPanel"
                                                         Duration="0" To="0.0"/>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                       Storyboard.TargetName="OuterHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.IsHitTestVisible)" 
                                                                       Storyboard.TargetName="InnerHintPanel">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False"/>
                                                </ObjectAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualState>
                                    </VisualStateGroup.States>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid HorizontalAlignment="Stretch">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid Grid.Column="0" HorizontalAlignment="left" 
                                      >
                                    <ContentPresenter x:Name="Presenter">
                                        <ContentPresenter.RenderTransform>
                                            <CompositeTransform TranslateX="0"/>
                                        </ContentPresenter.RenderTransform>

                                    </ContentPresenter>
                                </Grid>
                                <Rectangle x:Name="InnerHintPanel" Grid.Column="0" Width="24"
                                   Height="{TemplateBinding HintPanelHeight}"
                                   HorizontalAlignment="Left"
                                   Fill="Transparent"
                                   StrokeThickness="0">
                                    <Rectangle.RenderTransform>
                                        <CompositeTransform TranslateX="0"/>
                                    </Rectangle.RenderTransform>
                                </Rectangle>
                                <ContentControl x:Name="InfoPresenter" Grid.Column="1"
                                        VerticalAlignment="Top"
                                        Content="{TemplateBinding ContentInfo}"
                                        ContentTemplate="{TemplateBinding ContentInfoTemplate}"/>
                            </Grid>
                            <Rectangle x:Name="OuterHintPanel" Width="24"
                               HorizontalAlignment="Left"
                               Height="{TemplateBinding HintPanelHeight}"
                               Fill="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }"
                               StrokeThickness="0" Opacity="0.0"/>

                            <Grid x:Name="OuterCover" IsHitTestVisible="True"
                          Visibility="Collapsed" Background="Transparent"/>
                            <CheckBox x:Name="SelectBox" Visibility="Collapsed" Height="{TemplateBinding HintPanelHeight}" 
                                  IsChecked="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsSelected, Mode=TwoWay}" Style="{StaticResource CheckBoxStyleGrey}">
                                <CheckBox.RenderTransform>
                                    <CompositeTransform TranslateX="0"/>
                                </CheckBox.RenderTransform>
                            </CheckBox>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter-->
        </Style>

        <!-- Estilo para hacer el roundbutton-->
        <Style x:Key="RoundButton" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMediumLarge}"/>
            <Setter Property="Padding" Value="10,3,10,5"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Source={StaticResource AppSettings}, Path=themeColorMain,Converter={StaticResource StringToColor} }"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="#FFFFFFFF"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="50" Margin="{StaticResource PhoneTouchTargetOverhang}">
                                <ContentControl x:Name="ContentContainer" Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5">
                                    <ContentControl.RenderTransform>
                                        <ScaleTransform x:Name="buttonScale" />
                                    </ContentControl.RenderTransform>
                                </ContentControl>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- Estilo de scrollbar para longlistmultiselector-->
        <!--Style x:Key="LongListSelectorStyle1" TargetType="LongListSelector">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="LongListSelector">
                        <Grid Background="{TemplateBinding Background}" d:DesignWidth="480" d:DesignHeight="800">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="ScrollStates">
                                    <VisualStateGroup.Transitions>
                                        <VisualTransition GeneratedDuration="00:00:00.5"/>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="Scrolling">
                                        <Storyboard>
                                            <DoubleAnimation Duration="0" To="1" Storyboard.TargetProperty="Opacity" Storyboard.TargetName="VerticalScrollBar"/>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="NotScrolling"/>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Grid Margin="{TemplateBinding Padding}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="auto"/>
                                </Grid.ColumnDefinitions>
                                <ViewportControl x:Name="ViewportControl" 
                                                 HorizontalContentAlignment="Stretch"
                                                 VerticalAlignment="Top" />
                                <ScrollBar x:Name="VerticalScrollBar" Background="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" Grid.Column="1" Margin="4,0,4,0" Opacity="0" Orientation="Vertical"/>
                            </Grid>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style-->
        
           <!--ControlTemplate x:Key="LongListMultiSelectorControlTemplate1" 
                         TargetType="toolkit:LongListMultiSelector">
            <phone:LongListSelector x:Name="InnerSelector"
            GridCellSize="{TemplateBinding GridCellSize}"
            GroupFooterTemplate="{TemplateBinding GroupFooterTemplate}"
            GroupHeaderTemplate="{TemplateBinding GroupHeaderTemplate}"
            HideEmptyGroups="{TemplateBinding HideEmptyGroups}"
            IsGroupingEnabled="{TemplateBinding IsGroupingEnabled}"
            ItemsSource="{TemplateBinding ItemsSource}"
            JumpListStyle="{TemplateBinding JumpListStyle}"
            ListFooter="{TemplateBinding ListFooter}"
            ListFooterTemplate="{TemplateBinding ListFooterTemplate}"
            ListHeader="{TemplateBinding ListHeader}"
            ListHeaderTemplate="{TemplateBinding ListHeaderTemplate}"
            Style="{StaticResource LongListSelectorStyle1}"
            >
                <phone:LongListSelector.ItemTemplate>
                    <DataTemplate>
                        <toolkit:LongListMultiSelectorItem
                        x:Name="LLSItem"
                        HorizontalContentAlignment="Stretch"
                        VerticalAlignment="Stretch"
                        Content="{Binding}"
                            />
                    </DataTemplate>
                </phone:LongListSelector.ItemTemplate>
            </phone:LongListSelector>
        </ControlTemplate-->

        <!-- Animaciones para la muestra del tutorial en pantalla principal-->
        <Storyboard x:Name="FlipDownload">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="ImageHelp">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="90"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="ImageDownload">
                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="FlipHelp">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="ImageDownload">
                <SplineDoubleKeyFrame KeyTime="0" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationX)" Storyboard.TargetName="ImageHelp">
                <SplineDoubleKeyFrame KeyTime="0:0:0.2" Value="90"/>
                <SplineDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="TextShowDownload">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="TextHelp">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="500">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextHelp">
                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="TextDownload">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-500">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextDownload">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Name="TextShowHelp">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="TextDownload">
                <EasingDoubleKeyFrame KeyTime="0" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="500">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextDownload">
                <EasingDoubleKeyFrame KeyTime="0" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseOut"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.RenderTransform).(CompositeTransform.TranslateX)" Storyboard.TargetName="TextHelp">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="-500">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity" Storyboard.TargetName="TextHelp">
                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
                <EasingDoubleKeyFrame KeyTime="0:0:0.8" Value="1">
                    <EasingDoubleKeyFrame.EasingFunction>
                        <CubicEase EasingMode="EaseIn"/>
                    </EasingDoubleKeyFrame.EasingFunction>
                </EasingDoubleKeyFrame>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>

    </Page.Resources>

    <!--LayoutRoot es la cuadrícula raíz donde se coloca todo el contenido de la página-->
    <Grid x:Name="LayoutRoot" Background="{Binding Source={StaticResource AppSettings}, Path=themeColorMain,Converter={StaticResource StringToColor} }">
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--TitlePanel contiene el nombre de la aplicación y el título de la página-->
        <Grid Grid.Row="0" Background="{Binding Source={StaticResource AppSettings}, Path=themeColorHeader,Converter={StaticResource StringToColor} }" Margin="0,-2,0,0">

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!--<Image Grid.Row="0" Grid.Column="0" Margin="0,-5,0,-5" Source="/Assets/WP-App-05C.png" HorizontalAlignment="Left" Visibility="Collapsed"  />-->
            <TextBlock Grid.Column="1" Margin="0,0,0,0" 
                       Text="Wallet Pass" FontSize="27" 
                       VerticalAlignment="Center" HorizontalAlignment="Center" 
                       FontFamily="Segoe WP Light" 
                       Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" />
            <StackPanel x:Name="btnUpdates" Grid.Column="2" Orientation="Horizontal" HorizontalAlignment="Right" 
                        Visibility="Collapsed" 
                        Tapped="btnUpdates_Tap">
                <!--<Image Source="/Assets/AppBar/appbar.download.png" Margin="0,0,-30,0"/>-->
                <Rectangle Margin="0,0,-30,0" Height="50" Width="50" Fill="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }">
                   
                </Rectangle>
                <TextBlock x:Name="txtUpdates" FontSize="30" Margin="20,10,20,0" Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor}}" FontFamily="Segoe WP Light"/>
            </StackPanel>



        </Grid>

        <!--ContentPanel. Colocar aquí el contenido adicional-->

        <Pivot x:Name="AppPivot" Grid.Row="1" Visibility="Visible">
            <PivotItem x:Name="PassPanel" Margin="0,10,0,0">
                <Grid Margin="0,0,2,0">
                    <!--toolkit:LongListMultiSelector x:Name="lstPass" ItemContainerStyle="{StaticResource LongListMultiSelectorItemStyle1}" Template="{StaticResource LongListMultiSelectorControlTemplate1 }"
                                                LayoutMode="List"
                                                SelectionChanged="OnPassListSelectionChanged"
                                                IsSelectionEnabledChanged="OnPassListIsSelectionEnabledChanged"
                                                ItemTemplate="{StaticResource PassItemTemplate}"
                                                ItemInfoTemplate="{StaticResource PassItemTemplateInfo}"
                                                Margin="0,0,2,0"
                                                Visibility="Visible" 
                                                   ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                /-->

                    <!--toolkit:LongListMultiSelector x:Name="lstPassGroup" ItemContainerStyle="{StaticResource LongListMultiSelectorItemStyle1}" Template="{StaticResource LongListMultiSelectorControlTemplate1 }"
                                                LayoutMode="List"
                                                HideEmptyGroups="True" 
                                                SelectionChanged="OnPassListSelectionChanged"
                                                IsSelectionEnabledChanged="OnPassListIsSelectionEnabledChanged"
                                                IsGroupingEnabled="True" 
                                                JumpListStyle="{StaticResource groupHeaderJumListStyle}"
                                                GroupHeaderTemplate="{StaticResource groupHeaderTemplate}"
                                                ItemTemplate="{StaticResource PassItemTemplate}"
                                                ItemInfoTemplate="{StaticResource PassItemTemplateInfo}"
                                                Margin="0,0,2,0"
                                                Visibility="Collapsed" 
                                                   ScrollViewer.VerticalScrollBarVisibility="Visible"
                                                /-->
                </Grid>
            </PivotItem>
        </Pivot>
        
         <Pivot x:Name="AppPivotExpired" Grid.Row="1" HeaderTemplate="{StaticResource PivotHeader}" Visibility="Collapsed" >
            <PivotItem x:Name="PassPanelOptExpired" Margin="0,10,0,0" Header="{Binding Source={StaticResource LocalizedStrings},Path=LocalizedResources.listPivotList}">
                <Grid Margin="0,0,2,0">
                    <!--toolkit:LongListMultiSelector x:Name="lstPassOptExpired" ItemContainerStyle="{StaticResource LongListMultiSelectorItemStyle1}" Template="{StaticResource LongListMultiSelectorControlTemplate1 }"
                                                LayoutMode="List"
                                                SelectionChanged="OnPassListSelectionChanged"
                                                IsSelectionEnabledChanged="OnPassListIsSelectionEnabledChanged"
                                                ItemTemplate="{StaticResource PassItemTemplate}"
                                                ItemInfoTemplate="{StaticResource PassItemTemplateInfo}"
                                                Margin="0,0,2,0"
                                                Visibility="Visible" 
                                                /-->

                    <!--toolkit:LongListMultiSelector x:Name="lstPassGroupOptExpired" ItemContainerStyle="{StaticResource LongListMultiSelectorItemStyle1}" Template="{StaticResource LongListMultiSelectorControlTemplate1 }"
                                                LayoutMode="List"
                                                HideEmptyGroups="True" 
                                                SelectionChanged="OnPassListSelectionChanged"
                                                IsSelectionEnabledChanged="OnPassListIsSelectionEnabledChanged"
                                                IsGroupingEnabled="True" 
                                                JumpListStyle="{StaticResource groupHeaderJumListStyle}"
                                                GroupHeaderTemplate="{StaticResource groupHeaderTemplate}"
                                                ItemTemplate="{StaticResource PassItemTemplate}"
                                                ItemInfoTemplate="{StaticResource PassItemTemplateInfo}"
                                                Margin="0,0,2,0"
                                                Visibility="Collapsed" 
                                                /-->
                </Grid>
            </PivotItem>
                
            <PivotItem x:Name="PassPanelOptExpiredExp" Margin="0,10,0,0" 
                       Header="{Binding Source={StaticResource LocalizedStrings},Path=LocalizedResources.listPivotExpired}">
                <Grid Margin="0,0,2,0">
                    <!--toolkit:LongListMultiSelector x:Name="lstPassOptExpiredExp" ItemContainerStyle="{StaticResource LongListMultiSelectorItemStyle1}" Template="{StaticResource LongListMultiSelectorControlTemplate1 }"
                                                LayoutMode="List"
                                                SelectionChanged="OnPassListSelectionChanged"
                                                IsSelectionEnabledChanged="OnPassListIsSelectionEnabledChanged"
                                                ItemTemplate="{StaticResource PassItemTemplate}"
                                                ItemInfoTemplate="{StaticResource PassItemTemplateInfo}"
                                                Margin="0,0,2,0"
                                                Visibility="Visible" 
                                                /-->

                    <!--toolkit:LongListMultiSelector x:Name="lstPassGroupOptExpiredExp" ItemContainerStyle="{StaticResource LongListMultiSelectorItemStyle1}" Template="{StaticResource LongListMultiSelectorControlTemplate1 }"
                                                LayoutMode="List"
                                                HideEmptyGroups="True" 
                                                SelectionChanged="OnPassListSelectionChanged"
                                                IsSelectionEnabledChanged="OnPassListIsSelectionEnabledChanged"
                                                IsGroupingEnabled="True" 
                                                JumpListStyle="{StaticResource groupHeaderJumListStyle}"
                                                GroupHeaderTemplate="{StaticResource groupHeaderTemplate}"
                                                ItemTemplate="{StaticResource PassItemTemplate}"
                                                ItemInfoTemplate="{StaticResource PassItemTemplateInfo}"
                                                Margin="0,0,2,0"
                                                Visibility="Collapsed" 
                                                /-->
                </Grid>
            </PivotItem>
        </Pivot>
        <Grid x:Name="Sample" Grid.Row="1" Visibility="Collapsed">
            <Grid.RowDefinitions>
                <RowDefinition Height="250"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Grid Grid.Row="1" Margin="0,0,0,0">

                <Button x:Name="btnDownHelp" Grid.Row="0" Grid.RowSpan="2" Style="{StaticResource RoundButton}" 
                        Width="110" Height="110" BorderThickness="3" Background="Transparent" BorderBrush="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" 
                        Tapped="btnDownHelp_Tap" ManipulationStarted="btnDownHelp_ManipulationStarted" ManipulationCompleted="btnDownHelp_ManipulationCompleted" />

                <Rectangle x:Name="ImageDownload" Height="85" Width="85" Fill="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" RadiusY="30" RadiusX="30" IsHitTestVisible="False">
                    <Rectangle.Projection>
                        <PlaneProjection RotationX="-90"/>
                    </Rectangle.Projection>
                </Rectangle>
                <!--<Image x:Name="ImageDownload" Height="85" Source="/Assets/appbar/appbar.download.png">
                    <Image.Projection>
                        <PlaneProjection RotationX="-90"/>
                    </Image.Projection>
                </Image>-->
                <Rectangle x:Name="ImageHelp" Height="85" Width="85" Fill="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" RadiusY="30" RadiusX="30" IsHitTestVisible="False">
                    <Rectangle.Projection>
                        <PlaneProjection/>
                    </Rectangle.Projection>
                </Rectangle>
                
                <!--<Image x:Name="ImageHelp" Height="85" Source="/Assets/appbar/appbar.question.png">
                    <Image.Projection>
                        <PlaneProjection/>
                    </Image.Projection>
                </Image>-->

            </Grid>

            <Grid Grid.Row="2">
                <TextBlock x:Name="TextHelp" Margin="30,0,30,70" Text="{Binding Path=LocalizedResources.tutoMainHelp ,Source={StaticResource LocalizedStrings }}" 
                           Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" TextWrapping="Wrap" FontSize="28" FontFamily="Segoe WP Light" Opacity="1" TextAlignment="Center">
                    <TextBlock.RenderTransform>
                        <CompositeTransform/>
                    </TextBlock.RenderTransform>
                </TextBlock>

                <TextBlock x:Name="TextDownload" Margin="30,0,30,70" Text="{Binding Path=LocalizedResources.tutoMainDownload ,Source={StaticResource LocalizedStrings }}"
                           Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" TextWrapping="Wrap" FontSize="28" FontFamily="Segoe WP Light" Opacity="0" TextAlignment="Center">
                    <TextBlock.RenderTransform>
                        <CompositeTransform TranslateX="-500"/>
                    </TextBlock.RenderTransform>
                </TextBlock>

            </Grid>


            <!--<Image Grid.Row="2" Height="100"  Source="/Assets/Images/showTutorialArrow.png" HorizontalAlignment="Right" Margin="0,10,10,10" Visibility="Collapsed" />-->
        </Grid>

        <Grid x:Name="gridSplash" Grid.Row="0" Grid.RowSpan="2" Visibility="Collapsed">
            <Grid.Background>
                <SolidColorBrush x:Name="LayoutColor" Color="{Binding Source={StaticResource AppSettings}, Path=themeColorMain,Converter={StaticResource StringToColor} }" Opacity="0.85"/>
            </Grid.Background>

            <StackPanel  HorizontalAlignment="Left" Margin="47,250,47,250">
                <TextBlock x:Name="txtSplash" HorizontalAlignment="Center" Margin="0,0,0,20" FontSize="26" FontFamily="Segoe WP Light" Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" />
                <TextBlock x:Name="txtSplashTemp" HorizontalAlignment="Center" Margin="0,0,0,20" FontSize="26" FontFamily="Segoe WP Light" Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }"  />
                <ProgressBar x:Name="progressBar" HorizontalAlignment="left"  Width="383" IsIndeterminate="True" Height="10" Foreground="{Binding Source={StaticResource AppSettings}, Path=themeColorForeground,Converter={StaticResource StringToColor} }" />
            </StackPanel>
        </Grid>
    </Grid>

    <!--Page.ApplicationBar>
        <ApplicationBar IsVisible="True" IsMenuEnabled="True" />
    </Page.ApplicationBar-->
    <!-- Colores 
    Blanco roto original #FFFFFCF0-->
</Page>
